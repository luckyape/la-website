{"version":3,"sources":["main.js","la-viewer.js","work.js","init.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","laViewer","options","settings","gridId","counterId","cardClass","viewerFilterChipsId","filterChipsId","cardChipClass","materializeChips","chipOptions","placeholder","secondaryPlaceholder","autocompleteOptions","limit","Infinity","minLength","flickity","cellSelector","wrapAround","selectedAttraction","friction","resize","pageDots","cellAlign","isotope","layoutMode","packery","columnWidth","gutter","itemSelector","percentPosition","$","extend","info","self","this","$el","$document","document","grid","getElementById","counter","cards","querySelectorAll","viewerFilterChips","$chips","probPhone","test","userAgent","toLowerCase","documentElement","filters","chips","initViewer","openLightbox","imgUrl","getAttribute","showLoader","setTimeout","fadeIn","attr","load","clearTimeout","hide","$overlay","html","panzoom","minScale","panOnlyWhenZoomed","on","stopImmediatePropagation","closeLightBox","fadeOut","$grid","flickityInit","async","isotopeInit","click","init","toggleFilter","sheet","createElement","filterHeight","height","innerHTML","body","appendChild","filterToggles","i","l","length","classList","toggle","initChips","fiterResults","querySelector","initPlugin","initMaterializeChips","filterChips","chipsArr","autoCompleteData","cL","k","cardChips","split","first","trim","replace","push","tag","id","concat","cl","item","data","material_chip","focus","selected","chip","innerText","removeClass","addClass","isotopeSettings","chipFilter","keywords","isMatched","materialChips","map","c","Array","prototype","slice","call","indexOf","filter","each","obj","src","remove","flickityExists","requestAnimationFrame","add","m","ml","flickityCard","j","fL","$carousel","card","contains","flkty","updateStatus","slideNumber","selectedIndex","slides","jQuery","$contWrap","$body","sideNav","onOpen","Materialize","showStaggeredList","onClose","el","css","opacity"],"mappings":"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","file":"work.min.js","sourcesContent":["/* eslint-env browser */\n(function main() {\n  'use strict';\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n  );\n\n  if ('serviceWorker' in navigator &&\n    (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n      .then(function(registration) {\n        // updatefound is fired if service-worker.js changes.\n        registration.onupdatefound = function() {\n          // updatefound is also fired the very first time the SW is installed,\n          // and there's no need to prompt for a reload at that point.\n          // So check here to see if the page is already controlled,\n          // i.e. whether there's an existing service worker.\n          if (navigator.serviceWorker.controller) {\n            // The updatefound event implies that registration.installing is set:\n            // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n            var installingWorker = registration.installing;\n\n            installingWorker.onstatechange = function() {\n              switch (installingWorker.state) {\n                case 'installed':\n                  // At this point, the old content will have been purged and the\n                  // fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in the page's interface.\n                  break;\n\n                case 'redundant':\n                  throw new Error('The installing ' +\n                    'service worker became redundant.');\n\n                default:\n                  // Ignore\n              }\n            };\n          }\n        };\n      }).catch(function(e) {\n        console.error('Error during service worker registration:', e);\n      });\n  }\n})();\n","\n/* global document, navigator, async, window, $ */\nvar laViewer = function(options) { // eslint-disable-line no-unused-vars\n  var settings = {\n    gridId: 'viewer-cards',\n    counterId: 'viewer-counter',\n    cardClass: '.viewer-item',\n    viewerFilterChipsId: 'viewer-filter-chips',\n    filterChipsId: 'viewer-filter-chips',\n    cardChipClass: '.card-action .chip',\n    materializeChips: true,\n    chipOptions: {\n      placeholder: '...',\n      secondaryPlaceholder: '...',\n      autocompleteOptions: {\n        limit: Infinity,\n        minLength: 1\n      }\n    },\n    flickity: {\n      cellSelector: '.flickity-item',\n      wrapAround: true,\n      selectedAttraction: 0.2,\n      friction: 0.8,\n      resize: true,\n      pageDots: false,\n      cellAlign: 'center'\n    },\n    isotope: {\n      layoutMode: 'packery',\n      packery: {\n        columnWidth: '.grid-sizer',\n        gutter: '.gutter-sizer'\n      },\n      itemSelector: '.grid-item',\n      percentPosition: true,\n      resize: true\n    }};\n  $.extend(settings, options);\n  console.info(settings);\n  var self = this;\n  this.$el = $(this);\n  this.$document = $(document);\n  this.grid = document.getElementById(settings.gridId);\n  this.counter = document.getElementById(settings.counterId);\n  this.cards = this.grid.querySelectorAll(settings.cardClass);\n  this.viewerFilterChips = document.getElementById(settings.viewerFilterChipsId);\n  this.$chips = $(this.viewerFilterChips);\n  this.probPhone = ((/iphone|android|ie|blackberry|fennec/).test(navigator.userAgent.toLowerCase()) && 'ontouchstart' in document.documentElement);\n  this.filters = {\n    chips: []\n  };\n  this.initViewer = function() {\n    var $grid = $(this.grid);\n    var $overlay = $('#la-viewer-overlay');\n    if (this.probPhone) {\n      if (this.grid.isotope) {\n        $grid.isotope('destroy');\n      }\n      if (!$grid.flickity) {\n        async(['https://unpkg.com/flickity@2/dist/flickity.pkgd.min.js'], this.flickityInit);\n        async(['https://cdn.jsdelivr.net/npm/jquery.panzoom@3.2.2/dist/jquery.panzoom.min.js']);\n      } else if ($grid.flickity) {\n        setTimeout(this.flickityInit, 100);\n      }\n    } else {\n      if ($grid.flickity) {\n        $grid.flickity('destroy');\n      }\n\n      if (!$grid.isotope) {\n        async(['https://unpkg.com/isotope-layout@3/dist/isotope.pkgd.min.js'], function() {\n          async(['https://cdn.jsdelivr.net/npm/isotope-packery@2.0.0/packery-mode.pkgd.min.js'], self.isotopeInit);\n        });\n      } else if ($grid.isotope) {\n        setTimeout(self.isotopeInit, 100);\n      }\n    }\n\n    $('[data-lg-image]', $grid).click(openLightbox);\n\n    $overlay.click(closeLightBox);\n\n    function openLightbox() {\n      var imgUrl = this.getAttribute('data-lg-image');\n      var showLoader = setTimeout(function() {\n        $('.loader-container').fadeIn('slow');\n      }, 300);\n\n      $('<img/>')\n        .attr('src', imgUrl)\n        .load(function() {\n          clearTimeout(showLoader);\n          $('.loader-container').hide();\n          $('.img-container .image', $overlay).html(this);\n          $('.img-container', $overlay).fadeIn();\n          $('.img-container', $overlay).panzoom({\n            minScale: 1,\n            panOnlyWhenZoomed: true\n          });\n          $('.panzoom .close', $overlay).on('touchstart', function(e) {\n            e.stopImmediatePropagation();\n          });\n        });\n      $overlay.fadeIn('fast');\n    }\n\n    function closeLightBox() {\n      $('.img-container .image', $overlay).html('');\n      $('.img-container', $overlay).hide();\n      $overlay.fadeOut('fast');\n      $('.img-container', $overlay).panzoom('reset');\n    }\n  };\n  this.init = function() {\n    var $chips = self.$chips;\n    this.$chips = self.initChips($chips);\n    this.fiterResults = this.viewerFilterChips.querySelector('.autocomplete-content');\n    $('.toggle-filter a').click(toggleFilter);\n    this.initViewer();\n\n    function toggleFilter() {\n      var sheet = document.createElement('style');\n      var filterHeight = self.$chips.height();\n      sheet.innerHTML = '.filter-on.viewer-filter { min-height: ' + (filterHeight + 30) + 'px; will-change: min-height;}';\n      document.body.appendChild(sheet);\n      var filterToggles = document.querySelectorAll('.tap-target-row,.viewer-filter,.toggle-filter');\n      for (var i = 0, l = filterToggles.length; i < l; i++) {\n        filterToggles[i].classList.toggle('filter-on');\n      }\n    }\n  };\n\n  this.initPlugin = function() {\n    if (self.probPhone) {\n      self.flickityInit();\n    } else if (!this.probPhone) {\n      $(self.grid).isotope();\n    }\n  };\n\n  this.initMaterializeChips = function($chips) {\n    var filterChips = [];\n    var chipsArr = [];\n    var autoCompleteData = {};\n    var cL = self.cards.length;\n    var filters = self.filters;\n    var cards = self.cards;\n\n    for (var k = 0; k < cL; k++) {\n      var cardChips = cards[k].getAttribute('data-keywords').split(',');\n      var first = cardChips[0].trim().replace(/\\s+/g, '-').toLowerCase();\n      filterChips.push({\n        tag: first,\n        id: first\n      });\n      chipsArr = chipsArr.concat(cardChips);\n    }\n\n    var cl = chipsArr.length;\n    for (var i = 0; i < cl; i++) {\n      var item = chipsArr[i];\n      if (!autoCompleteData[item]) {\n        autoCompleteData[item] = null;\n      }\n    }\n    var chipOptions = settings.chipOptions;\n    chipOptions.data = filterChips;\n    chipOptions.autocompleteOptions.data = autoCompleteData;\n    $chips.material_chip(chipOptions);\n    $('input', $chips).focus();\n\n    $chips.on('click', function() {\n      if (filters.selected) {\n        filters.selected = null;\n        self.initPlugin();\n      }\n    });\n    $chips.on('chip.select', function(e, chip) {\n      filters.selected = chip.tag;\n      self.initPlugin();\n    });\n\n    $chips.on('chip.add', self.initPlugin);\n    $chips.on('chip.delete', function(chip) {\n      if (filters.selected === chip.tag) {\n        filters.selected = null;\n      }\n      self.initPlugin();\n    });\n  };\n  this.initChips = function($chips) {\n    if (settings.materializeChips) {\n      this.initMaterializeChips($chips);\n    } else {\n      var filters = self.filters;\n      $('.chip', $chips).on('click', function() {\n        var tag = this.innerText;\n        console.info(tag, this);\n        if (filters.selected === tag) {\n          filters.selected = null;\n          $(this).removeClass('selected');\n        } else {\n          $('.chip', $chips).removeClass('selected');\n          $(this).addClass('selected');\n          filters.selected = tag;\n        }\n        self.initPlugin();\n      });\n    }\n\n    return $chips;\n  };\n  this.isotopeInit = function() {\n    var $chips = self.$chips;\n    var filters = self.filters;\n    var $grid = $(self.grid);\n    var cards = self.cards;\n    var isotopeSettings = settings.isotope;\n\n    var chipFilter = function() {\n      var keywords = this.getAttribute('data-keywords').split(',');\n      var isMatched = true;\n      if (filters.selected) {\n        isMatched = keywords.indexOf(filters.selected) > -1;\n      } else {\n        var materialChips = $chips.material_chip('data');\n        if (materialChips) {\n          filters.chips = materialChips.map(function(c) {\n            return c.tag;\n          });\n        } else {\n          filters.chips = Array.prototype.slice.call(self.viewerFilterChips.querySelectorAll('.chip')).map(function(c) {\n            return c.innerText;\n          });\n        }\n\n        for (var i = 0; i < filters.chips.length; i++) {\n          if (keywords.indexOf(filters.chips[i]) > -1) {\n            return true;\n          }\n        }\n        return false;\n      }\n      return isMatched;\n    };\n    isotopeSettings.filter = chipFilter;\n\n    $grid.isotope(isotopeSettings);\n\n    $('img', cards).each(function(i, obj) {\n      $('<img/>')\n        .attr('src', obj.src)\n        .load(function() {\n          $(this).remove();\n          $grid.isotope();\n        });\n    });\n    for (var i = 0, l = cards.length; i < l; i++) {\n      cards[i].classList.remove('hide-item');\n    }\n  };\n\n  this.flickityInit = function() {\n    var $grid = $(self.grid);\n    var cards = self.cards;\n    var counter = self.counter;\n    var flickityExists = $grid.flickity;\n    counter.classList.remove('thud');\n    window.requestAnimationFrame(function() {\n      window.requestAnimationFrame(function() {\n        counter.classList.add('thud');\n      });\n    });\n\n    for (var m = 0, ml = cards.length; m < ml; m++) {\n      var flickityCard = cards[m];\n      var filters = self.filters;\n      var $chips = self.$chips;\n      var keywords = flickityCard.getAttribute('data-keywords').split(',');\n      flickityCard.classList.remove('flickity-item');\n      flickityCard.classList.add('hide-item');\n      if (filters.selected) {\n        if (flickityCard.getAttribute('data-keywords').indexOf(filters.selected) > -1) {\n          flickityCard.classList.add('flickity-item');\n        }\n      } else {\n        filters.chips = $chips.material_chip('data').map(function(c) {\n          return c.tag;\n        });\n        for (var j = 0, fL = filters.chips.length; j < fL; j++) {\n          if (keywords.indexOf(filters.chips[j]) > -1) {\n            flickityCard.classList.add('flickity-item');\n          }\n        }\n      }\n    }\n    if (flickityExists) {\n      $grid.flickity('destroy');\n    }\n    var $carousel = $grid.flickity(settings.flickity);\n    for (var i = 0, l = cards.length; i < l; i++) {\n      var card = cards[i];\n      if (card.classList.contains('flickity-item')) {\n        card.classList.remove('hide-item');\n      }\n    }\n    var flkty = $carousel.data('flickity');\n    var updateStatus = function() {\n      var slideNumber = flkty.selectedIndex + 1;\n      counter.innerHTML = slideNumber + '/' + flkty.slides.length;\n    };\n    $carousel.on('select.flickity', updateStatus);\n    updateStatus();\n  };\n  this.init();\n};\n","/* global laViewer, jQuery */\n(function($) {\n  $(function() {\n    laViewer({materializeChips: false});\n  });\n})(jQuery);\n","/* global  Materialize,jQuery, $ */\nvar $contWrap = $('#la-content-wrapper');\nvar $body = $('body');\n(function($) {\n  $(function() {\n    $('.button-collapse').sideNav({\n      onOpen: function() {\n        setTimeout(function() {\n          Materialize.showStaggeredList('#nav-mobile');\n        }, 50);\n        $contWrap.addClass('la-blur');\n        $body.addClass('side-menu-active');\n      },\n      onClose: function(el) {\n        $('li', el).css({\n          opacity: 0\n        });\n        $contWrap.removeClass('la-blur');\n        $body.removeClass('side-menu-active');\n      }\n    });\n    // end of document ready\n  });\n})(jQuery);\n// end of jQuery name space\n"]}