{"version":3,"sources":["main.js","about.js","init.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","meteorShower","transformCanvas","canvas","scale","Math","random","small","rotate","deg","x","screenW","y","screenH","style","transform","display","draw","ctx","getContext","i","strokeStyle","lineWidth","lineCap","head","s","meteorControl","delay","baseDelay","setTimeout","meteor","canvasW","canvasH","screen","height","width","PI","starSel","canvasTemplate","document","querySelector","cL","body","init","cloneNode","appendChild","clear","clearRect","tail","animationId","beginPath","moveTo","lineTo","stroke","requestAnimationFrame","cancelAnimationFrame","fadeInScroll","isDesktop","waitForBGToLoad","imageElement","Promise","resolve","onload","scrollResizeDesktop","scrollTo","clientH","documentElement","clientHeight","vH","origHeadTop","parseFloat","getComputedStyle","pHead","getPropertyValue","panelPadTopVh","panels","scrlBeforeDettach","detachVh","reattachPointVh","killSroll","info","scrollKilled","classList","remove","removeEventListener","stopMotion","add","addEventListener","startMotion","preventMotion","navRectTop","getElementById","getBoundingClientRect","top","event","touchSource","elementFromPoint","pageX","pageY","id","contains","timestamp","startTime","Date","getTime","animateHeaderPadding","preventDefault","stopPropagation","tasks","duration","direction","topDist","bottDist","pHeadPadTop","pHeadPadBottom","runtime","progress","min","paddingTop","toFixed","paddingBottom","onbeforeunload","visibility","bgImage","overlay","desktopAnimationFrames","scrollResizeMobile","starfield","substr","slice","replace","createElement","setAttribute","clouds","querySelectorAll","headPos","reattachVh","cloudsState","length","cloud","cloudPos","bottom","storyFade","dettachHeader","reattachHeader","headerH","attachHeader","headTopPos","cloudsTopPos","setVh","oldiOS","probPhone","isiPad","$contWrap","$","$body","sideNav","onOpen","Materialize","showStaggeredList","addClass","onClose","el","css","opacity","removeClass","jQuery"],"mappings":"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","file":"about.min.js","sourcesContent":["/* eslint-env browser */\n(function main() {\n  'use strict';\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n  );\n\n  if ('serviceWorker' in navigator &&\n    (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n      .then(function(registration) {\n        // updatefound is fired if service-worker.js changes.\n        registration.onupdatefound = function() {\n          // updatefound is also fired the very first time the SW is installed,\n          // and there's no need to prompt for a reload at that point.\n          // So check here to see if the page is already controlled,\n          // i.e. whether there's an existing service worker.\n          if (navigator.serviceWorker.controller) {\n            // The updatefound event implies that registration.installing is set:\n            // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n            var installingWorker = registration.installing;\n\n            installingWorker.onstatechange = function() {\n              switch (installingWorker.state) {\n                case 'installed':\n                  // At this point, the old content will have been purged and the\n                  // fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in the page's interface.\n                  break;\n\n                case 'redundant':\n                  throw new Error('The installing ' +\n                    'service worker became redundant.');\n\n                default:\n                  // Ignore\n              }\n            };\n          }\n        };\n      }).catch(function(e) {\n        console.error('Error during service worker registration:', e);\n      });\n  }\n})();\n","/* exported initScroller */\n\n/* global  window, document, getComputedStyle, probPhone, requestAnimationFrame, cancelAnimationFrame, isiPad, oldiOS */\n\n(function meteorShower() {\n  'use strict';\n  var meteorShower = function() {\n    var screenH = window.screen.height;\n    var screenW = window.screen.width;\n    var small = (probPhone) ? 0.5 : 1;\n    var deg = Math.PI * 2 * 25;\n    var starSel = 'body > canvas.shootingstar';\n    var canvasTemplate = document.querySelector(starSel);\n    var cL = 6;\n    var baseDelay = cL * 1250;\n    var canvasW;\n    var canvasH;\n    var body = document.querySelector('.body');\n    var s;\n    /*\n     * Initiates meteor shower effect\n     */\n    var init = function() {\n      canvasW = canvasTemplate.width;\n      canvasH = canvasTemplate.height;\n      s = canvasW / canvasH;\n      for (var i = 0; i < cL; ++i) {\n        var canvas = canvasTemplate.cloneNode();\n        body.appendChild(canvas);\n        meteorControl(canvas);\n      }\n    };\n\n    /*\n     * Determines starting position and apply style\n     * @param {array} canvas - array of canvas dom objects\n     */\n    function transformCanvas(canvas) {\n      var scale = ((Math.random() / 2) + 0.5) * small;\n      var rotate = Math.random() * deg;\n      var x = ((screenW * Math.random()) / screenW) * 100;\n      var y = ((screenH * Math.random()) / screenH) * 80;\n      if (y > 60) {\n        scale *= 0.6;\n      } else if (y < 6) {\n        y = 6;\n      }\n      canvas.style.transform = ' translate(' + x + 'vw, ' + y + 'vh) scale(' + scale + ') rotate(' + rotate + 'deg)';\n      canvas.style.display = 'block';\n    }\n\n    var clear = function(ctx) {\n      ctx.clearRect(0, 0, canvasW, canvasH);\n    };\n\n    var tail = function(ctx, i, s, animationId) {\n      clear(ctx);\n      i += 1 / 10;\n      ctx.beginPath();\n      ctx.moveTo(i * s, i);\n      ctx.lineTo(canvasW, canvasH);\n      ctx.stroke();\n      if (i < canvasH) {\n        animationId = requestAnimationFrame(function() {\n          tail(ctx, i, s, animationId);\n        });\n      } else {\n        cancelAnimationFrame(animationId);\n        clear(ctx);\n        meteorControl(ctx.canvas);\n      }\n    };\n    var head = function(ctx, i, s, animationId) {\n      clear(ctx);\n      i += 1 / 10;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(i * s, i);\n      ctx.stroke();\n\n      if (i < canvasH) {\n        animationId = requestAnimationFrame(function() {\n          head(ctx, i, s, animationId);\n        });\n      } else {\n        cancelAnimationFrame(animationId);\n        ctx.lineWidth = 75 / 100;\n        ctx.strokeStyle = 'rgba(255, 255, 255, .8)';\n        i = 0;\n        setTimeout(function() {\n          tail(ctx, i, s);\n        }, 100);\n      }\n    };\n    /**\n     * Applies canvas draw attributes fires off animatino of meteor head\n     * @param {array} canvas - array of canvas dom objects\n     */\n    function draw(canvas) {\n      var ctx = canvas.getContext('2d');\n      var i = 0;\n      ctx.strokeStyle = 'rgba(255, 255, 255, 1)';\n      ctx.lineWidth = 1.2;\n      ctx.lineCap = 'round';\n      head(ctx, i, s);\n    }\n    /*\n     * Positions meteor and kicks off draw()\n     * @param {array} canvas - array of canvas dom objects\n     */\n    var meteor = function(canvas) {\n      transformCanvas(canvas);\n      if (canvas.getContext) {\n        draw(canvas);\n      }\n    };\n    /*\n     * Sets up timeout before meteor fires\n     * @param {obj} canvas dom object\n     */\n    function meteorControl(canvas) {\n      var delay = Math.random() * baseDelay;\n      canvas.style.display = 'none';\n      setTimeout(function() {\n        meteor(canvas);\n      }, delay);\n    }\n    init();\n  };\n\n  var fadeInScroll = function(isDesktop) {\n    /* body tag */\n    var overlay = document.getElementById('la-about-overlay');\n    /* Container for text */\n    var body = document.getElementById('body');\n    var starfield = getComputedStyle(body).getPropertyValue('background-image');\n    starfield = starfield.substr(4).slice(0, -1).replace(/\"/g, '');\n    var bgImage = document.createElement('img');\n    bgImage.setAttribute('src', starfield);\n    var panels = document.getElementById('panels');\n    /* Clouds are dom objects to be faded in on scroll */\n    var clouds = panels.querySelectorAll('.cloud');\n    /* Height of viewport */\n    var clientH = document.documentElement.clientHeight;\n    /* 1 vh value */\n    var vH = 100 / clientH;\n    /* header text dom object */\n    var pHead = document.getElementById('panel-header');\n    /* header text dom object position */\n    var headPos = null;\n    /* 'atached', 'paused' & 'flowed' define 3 states of header text */\n    var state = 'attached';\n    /* Detach Point - when top cloud reach x vh dettach header */\n    var detachVh = 81;\n    /* Reattach Point – when header hits x vh reattach to panel */\n    var reattachVh = 15;\n    /* Capture original postion of header text defined by css */\n    var origHeadTop = parseFloat(getComputedStyle(pHead).getPropertyValue('top')) * vH;\n    var panelPadTopVh = parseFloat(getComputedStyle(panels).getPropertyValue('padding-top')) * vH;\n    var scrollKilled = false;\n    /* Capture padding-top for panel to calculate distance scrolled between attached => detached\n      panelPadTopVh - detachVh = scrollBeforeDetach\n      origHeadTop - scrollBeforeDetach = reattachPoint\n    */\n    var scrlBeforeDettach = panelPadTopVh - detachVh;\n    var reattachPointVh = origHeadTop - scrlBeforeDettach;\n\n    var pHeadPadTop = parseFloat(getComputedStyle(pHead).getPropertyValue('padding-top'));\n    var pHeadPadBottom = parseFloat(getComputedStyle(pHead).getPropertyValue('padding-top'));\n\n    var cloudsState = function() {\n      for (var i = clouds.length - 1; i >= 0; i--) {\n        var cloud = clouds[i];\n        var cloudPos = cloud.getBoundingClientRect();\n        if (cloudPos.bottom * vH > detachVh) {\n          cloud.classList.add('blurred');\n        } else if (cloudPos.top * vH < detachVh) {\n          cloud.classList.remove('blurred');\n        }\n      }\n    };\n    /*\n     * Triggered by scroll\n     */\n    var storyFade = function() {\n      /* determine scroll position */\n      // var scrollY = window.scrollY * vH;\n\n      /* determine header dom position */\n      headPos = pHead.getBoundingClientRect();\n      var headTopPos = headPos.top * vH;\n      var headerH = headPos.height * vH;\n      var cloudsTopPos = clouds[0].getBoundingClientRect().top * vH;\n      if (state === 'dettached') {\n        /*\n         * if the top of the clouds reaches bottom of the\n         * dettached header reattach\n         */\n        if (cloudsTopPos < headerH + headTopPos) {\n          reattachHeader();\n          console.info('dettached -> reattached');\n        } else if (cloudsTopPos - (100 * vH) > detachVh) {\n          /*\n           * if the top of the clouds drops below\n           * the initial attack point return to original state\n           * 100px Kludge prevents jankyness in edge cases\n           */\n          attachHeader();\n          console.info('dettached -> attached');\n        }\n      } else if (state === 'attached') {\n        /*\n         * if the top of the clouds reaches\n         * the detach point set datchVh\n         * - 1 smooths out the scroll\n         */\n        if (scrlBeforeDettach < origHeadTop - headTopPos) {\n          dettachHeader();\n          console.info('attached -> dettached');\n        }\n      } else if (state === 'reattached') {\n        /*\n         * if the top of the attachd header drops\n         * below the reattachVh dettach\n         */\n        if (headTopPos > reattachVh) {\n          dettachHeader();\n          console.info('reattached -> dettached');\n        }\n      }\n\n      function dettachHeader() {\n        var style = 'position:fixed; top:' + reattachPointVh + 'vh';\n        pHead.setAttribute('style', style);\n        pHead.classList.remove('bounce');\n        state = 'dettached';\n      }\n\n      function reattachHeader() {\n        var style = 'position: absolute; top:' + (panelPadTopVh - headerH) + 'vh';\n        pHead.setAttribute('style', style);\n        state = 'reattached';\n      }\n\n      function attachHeader() {\n        pHead.setAttribute('style', '');\n        state = 'attached';\n      }\n    };\n    var desktopAnimationFrames = function() {\n      cloudsState();\n      storyFade();\n      requestAnimationFrame(desktopAnimationFrames);\n    };\n\n    function waitForBGToLoad(imageElement) {\n      return new Promise(function(resolve) {\n        imageElement.onload = resolve;\n      });\n    }\n\n    function scrollResizeDesktop() {\n      window.scrollTo(0, 0);\n      clientH = document.documentElement.clientHeight;\n      vH = 100 / clientH;\n      origHeadTop = parseFloat(getComputedStyle(pHead).getPropertyValue('top')) * vH;\n      panelPadTopVh = parseFloat(getComputedStyle(panels).getPropertyValue('padding-top')) * vH;\n      scrlBeforeDettach = panelPadTopVh - detachVh;\n      reattachPointVh = origHeadTop - scrlBeforeDettach;\n    }\n    var setVh = function() {\n      clientH = document.documentElement.clientHeight;\n      vH = 100 / clientH;\n    };\n    var scrollResizeMobile = function() {\n      setVh();\n    };\n\n    function killSroll() {\n      console.info('killSroll');\n      scrollKilled = true;\n\n      body.classList.remove('mobile-scroll');\n      window.removeEventListener('touchstart', stopMotion);\n      window.removeEventListener('scroll', stopMotion);\n      window.removeEventListener('touchmove', stopMotion);\n      setTimeout(function() {\n        pHead.classList.add('bounce');\n        window.addEventListener('touchstart', startMotion, false);\n        window.addEventListener('scroll', preventMotion, false);\n        window.addEventListener('touchmove', preventMotion, false);\n      }, 500);\n    }\n    function stopMotion() {\n      var navRectTop = document.getElementById('la-content-wrapper').getBoundingClientRect().top;\n      if (!scrollKilled && navRectTop > 56) {\n        console.info('stopMotion');\n        scrollKilled = true;\n        setTimeout(killSroll, 300);\n        console.info('top');\n      }\n    }\n\n    /*\n     * Initiats normal scroll\n     */\n    function startMotion(event) {\n      if (scrollKilled) {\n        var touchSource = document.elementFromPoint(event.pageX, event.pageY);\n        console.info(document.getElementById('body').classList);\n        if (touchSource.id !== 'sideMenuLink' && !document.getElementById('body').classList.contains('side-menu-active')) {\n          scrollKilled = false;\n          console.info('start motion');\n\n          window.scrollTo(0, 5);\n          body.classList.add('mobile-scroll');\n          window.removeEventListener('touchstart', startMotion);\n          window.removeEventListener('scroll', preventMotion);\n          window.removeEventListener('touchmove', preventMotion);\n          requestAnimationFrame(function(timestamp) {\n            var startTime = timestamp || new Date().getTime();\n            animateHeaderPadding(startTime, 300, 1);\n          });\n          pHead.classList.remove('bounce');\n          /* activateScroll */\n          setTimeout(function() {\n            window.addEventListener('touchstart', stopMotion);\n            window.addEventListener('scroll', stopMotion);\n            window.addEventListener('touchmove', stopMotion);\n          }, 500);\n\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      }\n    }\n\n    // direction is -1 or 1\n    function animateHeaderPadding(tasks, startTime, duration, direction, timestamp, topDist, bottDist) {\n      // if browser doesn't support requestAnimationFrame, generate our own timestamp using Date:\n      timestamp = timestamp || startTime;\n      topDist = topDist || pHeadPadTop;\n      bottDist = bottDist || pHeadPadBottom;\n      var runtime = timestamp - startTime;\n      var progress = runtime / duration;\n      progress = Math.min(progress, 1);\n\n      pHead.style.paddingTop = topDist - (topDist * progress * direction).toFixed(2) + 'px';\n      pHead.style.paddingBottom = bottDist - (bottDist * progress * direction).toFixed(2) + 'px';\n      if (runtime < duration) {\n      // if duration not met yet\n        requestAnimationFrame(function(timestamp) {\n          // call requestAnimationFrame again with parameters\n          animateHeaderPadding(startTime, duration, direction, timestamp, topDist, bottDist);\n        });\n      }\n    }\n    /*\n     * Initiats normal scroll\n     */\n    function preventMotion(event) {\n      console.info('preventMotion');\n      window.scrollTo(0, 0);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    function init() {\n      // panels.ontouchstart = function() {};\n      window.onbeforeunload = function() {\n        panels.style.visibility = 'hidden';\n        window.scrollTo(0, 0);\n      };\n      waitForBGToLoad(bgImage).then(function() {\n        body.classList.add('bg-loaded');\n        setTimeout(function() {\n          overlay.remove();\n        }, 2000);\n      });\n\n      if (isDesktop) {\n        window.addEventListener('resize', scrollResizeDesktop, true);\n        setTimeout(function() {\n          desktopAnimationFrames();\n        }, 100);\n      } else {\n        window.addEventListener('resize', scrollResizeMobile, true);\n        killSroll();\n      }\n    }\n    init();\n  };\n\n  if (!oldiOS) {\n    fadeInScroll((!probPhone && !isiPad));\n    meteorShower();\n  }\n})();\n","/* global  Materialize,jQuery, $ */\nvar $contWrap = $('#la-content-wrapper');\nvar $body = $('body');\n(function($) {\n  $(function() {\n    $('.button-collapse').sideNav({\n      onOpen: function() {\n        setTimeout(function() {\n          Materialize.showStaggeredList('#nav-mobile');\n        }, 50);\n        $contWrap.addClass('la-blur');\n        $body.addClass('side-menu-active');\n      },\n      onClose: function(el) {\n        $('li', el).css({\n          opacity: 0\n        });\n        $contWrap.removeClass('la-blur');\n        $body.removeClass('side-menu-active');\n      }\n    });\n    // end of document ready\n  });\n})(jQuery);\n// end of jQuery name space\n"]}