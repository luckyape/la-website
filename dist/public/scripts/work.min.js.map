{"version":3,"sources":["la-viewer.js"],"names":["laViewer","options","settings","gridId","counterId","cardClass","viewerFilterChipsId","filterChipsId","cardChipClass","materializeChips","chipOptions","placeholder","secondaryPlaceholder","autocompleteOptions","limit","Infinity","minLength","flickity","cellSelector","wrapAround","selectedAttraction","friction","resize","pageDots","cellAlign","isotope","layoutMode","packery","columnWidth","gutter","itemSelector","percentPosition","$","extend","grid","document","getElementById","counter","cards","querySelectorAll","viewerFilterChips","$chips","probPhone","test","navigator","userAgent","toLowerCase","documentElement","filters","chips","getChips","filterChips","Array","prototype","slice","call","map","c","firstChild","textContent","isotopeInit","$grid","isotopeSettings","chipFilter","keywords","this","getAttribute","split","isMatched","selected","i","length","indexOf","filter","each","obj","attr","src","load","remove","l","classList","flickityInit","flickityExists","data","window","requestAnimationFrame","add","m","ml","flickityCard","j","fL","$carousel","card","contains","flkty","updateStatus","slideNumber","selectedIndex","innerHTML","slides","on","initViewer","openLightbox","imgUrl","showLoader","setTimeout","fadeIn","clearTimeout","hide","$overlay","html","panzoom","minScale","panOnlyWhenZoomed","e","stopImmediatePropagation","closeLightBox","fadeOut","async","click","initPlugin","initMaterializeChips","chipsArr","autoCompleteData","cL","k","cardChips","first","trim","replace","push","tag","id","concat","cl","item","material_chip","focus","chip","initChips","innerText","console","info","removeClass","addClass","init","toggleFilter","sheet","createElement","filterHeight","height","body","appendChild","filterToggles","toggle"],"mappings":"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","file":"work.min.js","sourcesContent":["/* global document, navigator, async, window, $ */\nvar laViewer = function(options) { // eslint-disable-line no-unused-vars\n  var settings = {\n    gridId: 'viewer-cards',\n    counterId: 'viewer-counter',\n    cardClass: '.viewer-item',\n    viewerFilterChipsId: 'viewer-filter-chips',\n    filterChipsId: 'viewer-filter-chips',\n    cardChipClass: '.card-action .chip',\n    materializeChips: true,\n    chipOptions: {\n      placeholder: '...',\n      secondaryPlaceholder: '...',\n      autocompleteOptions: {\n        limit: Infinity,\n        minLength: 1\n      }\n    },\n    flickity: {\n      cellSelector: '.flickity-item',\n      wrapAround: true,\n      selectedAttraction: 0.2,\n      friction: 0.8,\n      resize: true,\n      pageDots: false,\n      cellAlign: 'center'\n    },\n    isotope: {\n      layoutMode: 'packery',\n      packery: {\n        columnWidth: '.grid-sizer',\n        gutter: '.gutter-sizer'\n      },\n      itemSelector: '.grid-item',\n      percentPosition: true,\n      resize: true\n    }\n  };\n  $.extend(settings, options);\n  var grid = document.getElementById(settings.gridId);\n  var counter = document.getElementById(settings.counterId);\n  var cards = grid.querySelectorAll(settings.cardClass);\n  var viewerFilterChips = document.getElementById(settings.viewerFilterChipsId);\n  var $chips = $(viewerFilterChips);\n  var probPhone = ((/iphone|android|ie|blackberry|fennec/).test(navigator.userAgent.toLowerCase()) && 'ontouchstart' in document.documentElement);\n  var filters = {\n    chips: []\n  };\n  var getChips = function() {\n    var filterChips = Array.prototype.slice.call(viewerFilterChips.querySelectorAll('.chip')).map(function(c) {\n      return c.firstChild.textContent;\n    });\n    return filterChips;\n  };\n  var isotopeInit = function() {\n    var $grid = $(grid);\n    var isotopeSettings = settings.isotope;\n\n    var chipFilter = function() {\n      var keywords = this.getAttribute('data-keywords').split(',');\n      var isMatched = true;\n      if (filters.selected) {\n        isMatched = keywords.indexOf(filters.selected) > -1;\n      } else {\n        filters.chips = getChips();\n\n        for (var i = 0; i < filters.chips.length; i++) {\n          if (keywords.indexOf(filters.chips[i]) > -1) {\n            return true;\n          }\n        }\n        return false;\n      }\n      return isMatched;\n    };\n    isotopeSettings.filter = chipFilter;\n\n    $grid.isotope(isotopeSettings);\n\n    $('img', cards).each(function(i, obj) {\n      $('<img/>')\n        .attr('src', obj.src)\n        .load(function() {\n          $(this).remove();\n          $grid.isotope();\n        });\n    });\n    for (var i = 0, l = cards.length; i < l; i++) {\n      cards[i].classList.remove('hide-item');\n    }\n  };\n\n  var flickityInit = function() {\n    var $grid = $(grid);\n    var flickityExists = $grid.data('flickity');\n    counter.classList.remove('thud');\n    window.requestAnimationFrame(function() {\n      window.requestAnimationFrame(function() {\n        counter.classList.add('thud');\n      });\n    });\n\n    for (var m = 0, ml = cards.length; m < ml; m++) {\n      var flickityCard = cards[m];\n      var keywords = flickityCard.getAttribute('data-keywords').split(',');\n      flickityCard.classList.remove('flickity-item');\n      flickityCard.classList.add('hide-item');\n      if (filters.selected) {\n        if (flickityCard.getAttribute('data-keywords').indexOf(filters.selected) > -1) {\n          flickityCard.classList.add('flickity-item');\n        }\n      } else {\n        filters.chips = filters.chips = getChips();\n        for (var j = 0, fL = filters.chips.length; j < fL; j++) {\n          if (keywords.indexOf(filters.chips[j]) > -1) {\n            flickityCard.classList.add('flickity-item');\n          }\n        }\n      }\n    }\n    if (flickityExists) {\n      $grid.flickity('destroy');\n    }\n\n    var $carousel = $grid.flickity(settings.flickity);\n    for (var i = 0, l = cards.length; i < l; i++) {\n      var card = cards[i];\n      if (card.classList.contains('flickity-item')) {\n        card.classList.remove('hide-item');\n      }\n    }\n    var flkty = $carousel.data('flickity');\n    var updateStatus = function() {\n      var slideNumber = flkty.selectedIndex + 1;\n      counter.innerHTML = slideNumber + '/' + flkty.slides.length;\n    };\n    $carousel.on('select.flickity', updateStatus);\n    updateStatus();\n  };\n  var initViewer = function() {\n    var $grid = $(grid);\n    var $overlay = $('#la-viewer-overlay');\n\n    if (probPhone) {\n      if (grid.isotope) {\n        $grid.isotope('destroy');\n      }\n      if (!$grid.flickity) {\n        async(['https://unpkg.com/flickity@2/dist/flickity.pkgd.min.js'], flickityInit);\n        async(['https://cdn.jsdelivr.net/npm/jquery.panzoom@3.2.2/dist/jquery.panzoom.min.js']);\n      } else if ($grid.flickity) {\n        setTimeout(flickityInit, 100);\n      }\n    } else {\n      if ($grid.flickity) {\n        $grid.flickity('destroy');\n      }\n\n      if (!$grid.isotope) {\n        async(['https://unpkg.com/isotope-layout@3/dist/isotope.pkgd.min.js'], function() {\n          async(['https://cdn.jsdelivr.net/npm/isotope-packery@2.0.0/packery-mode.pkgd.min.js'], isotopeInit);\n        });\n      } else if ($grid.isotope) {\n        setTimeout(isotopeInit, 100);\n      }\n    }\n\n    $('[data-lg-image]', $grid).click(openLightbox);\n\n    $overlay.click(closeLightBox);\n\n    function openLightbox() {\n      var imgUrl = this.getAttribute('data-lg-image');\n      var showLoader = setTimeout(function() {\n        $('.loader-container').fadeIn('slow');\n      }, 300);\n\n      $('<img/>')\n        .attr('src', imgUrl)\n        .load(function() {\n          clearTimeout(showLoader);\n          $('.loader-container').hide();\n          $('.img-container .image', $overlay).html(this);\n          $('.img-container', $overlay).fadeIn();\n          if ($('.img-container', $overlay).panzoom) {\n            $('.img-container', $overlay).panzoom({\n              minScale: 1,\n              panOnlyWhenZoomed: true\n            });\n            $('.panzoom .close', $overlay).on('touchstart', function(e) {\n              e.stopImmediatePropagation();\n            });\n          }\n        });\n      $overlay.fadeIn('fast');\n    }\n\n    function closeLightBox() {\n      $('.img-container .image', $overlay).html('');\n      $('.img-container', $overlay).hide();\n      $overlay.fadeOut('fast');\n      if ($('.img-container', $overlay).panzoom) {\n        $('.img-container', $overlay).panzoom('reset');\n      }\n    }\n  };\n  var initPlugin = function() {\n    if (probPhone) {\n      flickityInit();\n    } else if (!probPhone) {\n      $(grid).isotope();\n    }\n  };\n  var initMaterializeChips = function($chips) {\n    var filterChips = [];\n    var chipsArr = [];\n    var autoCompleteData = {};\n    var cL = cards.length;\n\n    for (var k = 0; k < cL; k++) {\n      var cardChips = cards[k].getAttribute('data-keywords').split(',');\n      var first = cardChips[0].trim().replace(/\\s+/g, '-').toLowerCase();\n      filterChips.push({\n        tag: first,\n        id: first\n      });\n      chipsArr = chipsArr.concat(cardChips);\n    }\n\n    var cl = chipsArr.length;\n    for (var i = 0; i < cl; i++) {\n      var item = chipsArr[i];\n      if (!autoCompleteData[item]) {\n        autoCompleteData[item] = null;\n      }\n    }\n    var chipOptions = settings.chipOptions;\n    chipOptions.data = filterChips;\n    chipOptions.autocompleteOptions.data = autoCompleteData;\n    $chips.material_chip(chipOptions);\n    $('input', $chips).focus();\n\n    $chips.on('click', function() {\n      if (filters.selected) {\n        filters.selected = null;\n        initPlugin();\n      }\n    });\n    $chips.on('chip.select', function(e, chip) {\n      filters.selected = chip.tag;\n      initPlugin();\n    });\n\n    $chips.on('chip.add', initPlugin);\n    $chips.on('chip.delete', function(chip) {\n      if (filters.selected === chip.tag) {\n        filters.selected = null;\n      }\n      initPlugin();\n    });\n  };\n  var initChips = function($chips) {\n    if (settings.materializeChips) {\n      initMaterializeChips($chips);\n    } else {\n      $('.chip', $chips).on('click', function() {\n        var tag = this.innerText;\n        console.info(tag, this);\n        if (filters.selected === tag) {\n          filters.selected = null;\n          $(this).removeClass('selected');\n        } else {\n          $('.chip', $chips).removeClass('selected');\n          $(this).addClass('selected');\n          filters.selected = tag;\n        }\n        initPlugin();\n      });\n    }\n\n    return $chips;\n  };\n  var init = function() {\n    $chips = initChips($chips);\n    $('.toggle-filter a').click(toggleFilter);\n    initViewer();\n    function toggleFilter() {\n      var sheet = document.createElement('style');\n      var filterHeight = $chips.height();\n      sheet.innerHTML = '.filter-on.viewer-filter { min-height: ' + (filterHeight + 30) + 'px; will-change: min-height;}';\n      document.body.appendChild(sheet);\n      var filterToggles = document.querySelectorAll('.tap-target-row,.viewer-filter,.toggle-filter');\n      for (var i = 0, l = filterToggles.length; i < l; i++) {\n        filterToggles[i].classList.toggle('filter-on');\n      }\n    }\n  };\n\n  init();\n};\n"]}