{"version":3,"sources":["main.js","la-viewer.js","store.js","init.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","laViewer","options","settings","gridId","counterId","cardClass","viewerFilterChipsId","filterChipsId","cardChipClass","materializeChips","chipOptions","placeholder","secondaryPlaceholder","autocompleteOptions","limit","Infinity","minLength","flickity","cellSelector","wrapAround","selectedAttraction","friction","resize","pageDots","cellAlign","isotope","layoutMode","packery","columnWidth","gutter","itemSelector","percentPosition","$","extend","grid","document","getElementById","counter","cards","querySelectorAll","viewerFilterChips","$filterChipsContainer","probPhone","test","userAgent","toLowerCase","documentElement","filters","chips","getChips","filterChips","Array","prototype","slice","call","map","c","firstChild","textContent","isotopeInit","$grid","isotopeSettings","chipFilter","keywords","this","getAttribute","replace","split","isMatched","selected","i","length","indexOf","filter","each","obj","attr","src","load","remove","l","classList","flickityInit","flickityExists","data","requestAnimationFrame","add","m","ml","flickityCard","j","fL","$carousel","card","contains","flkty","updateStatus","slideNumber","selectedIndex","innerHTML","slides","on","initViewer","openLightbox","imgUrl","showLoader","setTimeout","fadeIn","clearTimeout","hide","$overlay","html","panzoom","minScale","panOnlyWhenZoomed","stopImmediatePropagation","closeLightBox","fadeOut","async","click","initPlugin","initMaterializeChips","$chips","chipsArr","autoCompleteData","cL","k","cardChips","first","trim","push","concat","filterItem","fCL","filterChipObjs","tag","id","chipItem","cl","material_chip","filterChipClick","eventEnds","hasClass","removeClass","focus","chip","addClass","children","selectedCardChip","filterTargetChip","newChip","addChip","index","selectChip","initChips","init","toggleFilter","sheet","createElement","filterHeight","height","body","appendChild","filterToggles","toggle","tapTarget","jQuery","$contWrap","$body","sideNav","onOpen","Materialize","showStaggeredList","onClose","el","css","opacity"],"mappings":"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","file":"store.min.js","sourcesContent":["/* eslint-env browser */\n(function main() {\n  'use strict';\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n  );\n\n  if ('serviceWorker' in navigator &&\n    (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n      .then(function(registration) {\n        // updatefound is fired if service-worker.js changes.\n        registration.onupdatefound = function() {\n          // updatefound is also fired the very first time the SW is installed,\n          // and there's no need to prompt for a reload at that point.\n          // So check here to see if the page is already controlled,\n          // i.e. whether there's an existing service worker.\n          if (navigator.serviceWorker.controller) {\n            // The updatefound event implies that registration.installing is set:\n            // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n            var installingWorker = registration.installing;\n\n            installingWorker.onstatechange = function() {\n              switch (installingWorker.state) {\n                case 'installed':\n                  // At this point, the old content will have been purged and the\n                  // fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in the page's interface.\n                  break;\n\n                case 'redundant':\n                  throw new Error('The installing ' +\n                    'service worker became redundant.');\n\n                default:\n                  // Ignore\n              }\n            };\n          }\n        };\n      }).catch(function(e) {\n        console.error('Error during service worker registration:', e);\n      });\n  }\n})();\n","/* global document, navigator, async, window, $ */\nvar laViewer = function(options) { // eslint-disable-line no-unused-vars\n  var settings = {\n    gridId: 'viewer-cards',\n    counterId: 'viewer-counter',\n    cardClass: '.viewer-item',\n    viewerFilterChipsId: 'viewer-filter-chips',\n    filterChipsId: 'viewer-filter-chips',\n    cardChipClass: '.card-action .chip',\n    materializeChips: true,\n    chipOptions: {\n      placeholder: '...',\n      secondaryPlaceholder: '...',\n      autocompleteOptions: {\n        limit: Infinity,\n        minLength: 1\n      }\n    },\n    flickity: {\n      cellSelector: '.flickity-item',\n      wrapAround: true,\n      selectedAttraction: 0.2,\n      friction: 0.8,\n      resize: true,\n      pageDots: false,\n      cellAlign: 'center'\n    },\n    isotope: {\n      layoutMode: 'packery',\n      packery: {\n        columnWidth: '.grid-sizer',\n        gutter: '.gutter-sizer'\n      },\n      itemSelector: '.grid-item',\n      percentPosition: true,\n      resize: true\n    }\n  };\n  $.extend(settings, options);\n  var grid = document.getElementById(settings.gridId);\n  var counter = document.getElementById(settings.counterId);\n  var cards = grid.querySelectorAll(settings.cardClass);\n  var viewerFilterChips = document.getElementById(settings.viewerFilterChipsId);\n  var $filterChipsContainer = $(viewerFilterChips);\n  var probPhone = ((/iphone|android|ie|blackberry|fennec/).test(navigator.userAgent.toLowerCase()) && 'ontouchstart' in document.documentElement);\n  var filters = {\n    chips: []\n  };\n  var getChips = function() {\n    var filterChips = Array.prototype.slice.call(viewerFilterChips.querySelectorAll('.chip')).map(function(c) {\n      return c.firstChild.textContent;\n    });\n    return filterChips;\n  };\n  var isotopeInit = function() {\n    var $grid = $(grid);\n    var isotopeSettings = settings.isotope;\n\n    var chipFilter = function() {\n      var keywords = this.getAttribute('data-keywords').replace(/\\,\\s/g, ',').replace(/\\s+/g, '-').split(',');\n      var isMatched = true;\n      if (filters.selected) {\n        isMatched = keywords.indexOf(filters.selected) > -1;\n      } else {\n        filters.chips = getChips();\n\n        for (var i = 0; i < filters.chips.length; i++) {\n          if (keywords.indexOf(filters.chips[i]) > -1) {\n            return true;\n          }\n        }\n        return false;\n      }\n      return isMatched;\n    };\n    isotopeSettings.filter = chipFilter;\n\n    $grid.isotope(isotopeSettings);\n\n    $('img', cards).each(function(i, obj) {\n      $('<img/>')\n        .attr('src', obj.src)\n        .load(function() {\n          $(this).remove();\n          $grid.isotope();\n        });\n    });\n    for (var i = 0, l = cards.length; i < l; i++) {\n      cards[i].classList.remove('hide-item');\n    }\n  };\n\n  var flickityInit = function() {\n    var $grid = $(grid);\n    var flickityExists = $grid.data('flickity');\n    counter.classList.remove('thud');\n    window.requestAnimationFrame(function() {\n      window.requestAnimationFrame(function() {\n        counter.classList.add('thud');\n      });\n    });\n\n    for (var m = 0, ml = cards.length; m < ml; m++) {\n      var flickityCard = cards[m];\n      var keywords = flickityCard.getAttribute('data-keywords').split(',');\n      flickityCard.classList.remove('flickity-item');\n      flickityCard.classList.add('hide-item');\n      if (filters.selected) {\n        if (flickityCard.getAttribute('data-keywords').indexOf(filters.selected) > -1) {\n          flickityCard.classList.add('flickity-item');\n        }\n      } else {\n        filters.chips = filters.chips = getChips();\n        for (var j = 0, fL = filters.chips.length; j < fL; j++) {\n          if (keywords.indexOf(filters.chips[j]) > -1) {\n            flickityCard.classList.add('flickity-item');\n          }\n        }\n      }\n    }\n    if (flickityExists) {\n      $grid.flickity('destroy');\n    }\n\n    var $carousel = $grid.flickity(settings.flickity);\n    for (var i = 0, l = cards.length; i < l; i++) {\n      var card = cards[i];\n      if (card.classList.contains('flickity-item')) {\n        card.classList.remove('hide-item');\n      }\n    }\n    var flkty = $carousel.data('flickity');\n    var updateStatus = function() {\n      var slideNumber = flkty.selectedIndex + 1;\n      counter.innerHTML = slideNumber + '/' + flkty.slides.length;\n    };\n    $carousel.on('select.flickity', updateStatus);\n    updateStatus();\n  };\n  var initViewer = function() {\n    var $grid = $(grid);\n    var $overlay = $('#la-viewer-overlay');\n\n    if (probPhone) {\n      if (grid.isotope) {\n        $grid.isotope('destroy');\n      }\n      if (!$grid.flickity) {\n        async(['https://unpkg.com/flickity@2/dist/flickity.pkgd.min.js'], flickityInit);\n        async(['https://cdn.jsdelivr.net/npm/jquery.panzoom@3.2.2/dist/jquery.panzoom.min.js']);\n      } else if ($grid.flickity) {\n        setTimeout(flickityInit, 100);\n      }\n    } else {\n      if ($grid.flickity) {\n        $grid.flickity('destroy');\n      }\n\n      if (!$grid.isotope) {\n        async(['https://unpkg.com/isotope-layout@3/dist/isotope.pkgd.min.js'], function() {\n          async(['https://cdn.jsdelivr.net/npm/isotope-packery@2.0.0/packery-mode.pkgd.min.js'], isotopeInit);\n        });\n      } else if ($grid.isotope) {\n        setTimeout(isotopeInit, 100);\n      }\n    }\n\n    $('[data-lg-image]', $grid).click(openLightbox);\n\n    $overlay.click(closeLightBox);\n\n    function openLightbox() {\n      var imgUrl = this.getAttribute('data-lg-image');\n      var showLoader = setTimeout(function() {\n        $('.loader-container').fadeIn('slow');\n      }, 300);\n\n      $('<img/>')\n        .attr('src', imgUrl)\n        .load(function() {\n          clearTimeout(showLoader);\n          $('.loader-container').hide();\n          $('.img-container .image', $overlay).html(this);\n          $('.img-container', $overlay).fadeIn();\n          if ($('.img-container', $overlay).panzoom) {\n            $('.img-container', $overlay).panzoom({\n              minScale: 1,\n              panOnlyWhenZoomed: true\n            });\n            $('.panzoom .close', $overlay).on('touchstart', function(e) {\n              e.stopImmediatePropagation();\n            });\n          }\n        });\n      $overlay.fadeIn('fast');\n    }\n\n    function closeLightBox() {\n      $('.img-container .image', $overlay).html('');\n      $('.img-container', $overlay).hide();\n      $overlay.fadeOut('fast');\n      if ($('.img-container', $overlay).panzoom) {\n        $('.img-container', $overlay).panzoom('reset');\n      }\n    }\n  };\n  var initPlugin = function() {\n    if (probPhone) {\n      flickityInit();\n    } else if (!probPhone) {\n      $(grid).isotope();\n    }\n  };\n  var initMaterializeChips = function($chips) {\n    var filterChips = [];\n    var chipsArr = [];\n    var autoCompleteData = {};\n    var cL = cards.length;\n\n    for (var k = 0; k < cL; k++) {\n      var cardChips = cards[k].getAttribute('data-keywords').split(',');\n      var first = cardChips[0].trim().toLowerCase();\n      if (filterChips.indexOf(first) === -1) {\n        filterChips.push(first);\n      }\n      chipsArr = chipsArr.concat(cardChips);\n    }\n\n    var fCL = filterChips.length;\n    var filterChipObjs = [];\n    var i;\n    var filterItem;\n    for (i = 0; i < fCL; i++) {\n      filterItem = filterChips[i];\n      filterChipObjs.push({\n        tag: filterItem,\n        id: filterItem\n      });\n    }\n    var cl = chipsArr.length;\n    var chipItem;\n    for (i = 0; i < cl; i++) {\n      chipItem = chipsArr[i];\n      if (!autoCompleteData[chipItem]) {\n        autoCompleteData[chipItem] = null;\n      }\n    }\n    var chipOptions = settings.chipOptions;\n    chipOptions.data = filterChipObjs;\n    chipOptions.autocompleteOptions.data = autoCompleteData;\n    $filterChipsContainer.material_chip(chipOptions);\n\n    var filterChipClick = function() {\n      var eventEnds = $(this).hasClass('selected');\n      $('.chip', $filterChipsContainer).removeClass('selected');\n      $chips.removeClass('selected');\n      if (filters.selected) {\n        filters.selected = null;\n        if (eventEnds) {\n          initPlugin();\n          return false;\n        }\n      }\n    };\n\n    $('input', $filterChipsContainer).focus();\n\n    $('.chip', $filterChipsContainer).on('click', filterChipClick);\n\n    $filterChipsContainer.on('chip.select', function(e, chip) {\n      filters.selected = chip.tag;\n      $chips\n        .filter('[data-chip-text = ' + chip.tag + ']')\n        .addClass('selected');\n      initPlugin();\n    });\n\n    $filterChipsContainer.on('chip.add', initPlugin);\n    $filterChipsContainer.on('chip.delete', function(chip) {\n      if (filters.selected === chip.tag) {\n        filters.selected = null;\n      }\n      initPlugin();\n    });\n    $chips.on('click', function() {\n      var filterChips = $filterChipsContainer.children();\n      var selectedCardChip = this.getAttribute('data-chip-text');\n      var cL = filterChips.length;\n      var filterTargetChip = null;\n      $chips.removeClass('selected');\n      for (var i = 0; i < cL; i++) {\n        if (!filterChips[i].firstChild) {\n          break;\n        }\n        if (filterChips[i].firstChild.textContent === selectedCardChip) {\n          filterTargetChip = filterChips[i];\n          $(filterTargetChip).on('click', filterChipClick);\n          filterTargetChip.click();\n          break;\n        }\n      }\n      if (!filterTargetChip) {\n        var newChip = {\n          tag: selectedCardChip,\n          id: selectedCardChip\n        };\n        $filterChipsContainer.addChip(newChip, $filterChipsContainer);\n        var index = $filterChipsContainer.material_chip('data').indexOf(newChip);\n        $('.chip', $filterChipsContainer).removeClass('selected');\n        $filterChipsContainer.selectChip(index, $filterChipsContainer);\n      }\n      return false;\n    });\n  };\n  var initChips = function($filterChipsContainer) {\n    var $chips = $('[data-chip-text]');\n    if (settings.materializeChips) {\n      initMaterializeChips($chips);\n    } else {\n      $chips.on('click', function() {\n        var tag = this.getAttribute('data-chip-text');\n        $chips.removeClass('selected');\n        if (filters.selected === tag) {\n          filters.selected = null;\n        } else {\n          $chips\n            .filter('[data-chip-text = ' + tag + ']')\n            .addClass('selected');\n          filters.selected = tag;\n        }\n        initPlugin();\n      });\n    }\n\n    return $filterChipsContainer;\n  };\n  var init = function() {\n    $filterChipsContainer = initChips($filterChipsContainer);\n    $('.toggle-filter a').click(toggleFilter);\n    initViewer();\n    function toggleFilter() {\n      var sheet = document.createElement('style');\n      var filterHeight = $filterChipsContainer.height();\n      sheet.innerHTML = '.filter-on.viewer-filter { min-height: ' + (filterHeight + 30) + 'px; will-change: min-height;}';\n      document.body.appendChild(sheet);\n      var filterToggles = document.querySelectorAll('.tap-target-row,.viewer-filter,.toggle-filter');\n      for (var i = 0, l = filterToggles.length; i < l; i++) {\n        filterToggles[i].classList.toggle('filter-on');\n      }\n    }\n  };\n\n  init();\n};\n","/* global laViewer, jQuery */\n(function($) {\n  $(function() {\n    laViewer();\n    $('.info-spot').click(function() {\n      $('.tap-target').tapTarget('open');\n    });\n  });\n})(jQuery);\n","/* global  Materialize,jQuery, $ */\nvar $contWrap = $('#la-content-wrapper');\nvar $body = $('body');\n(function($) {\n  $(function() {\n    $('.button-collapse').sideNav({\n      onOpen: function() {\n        setTimeout(function() {\n          Materialize.showStaggeredList('#nav-mobile');\n        }, 50);\n        $contWrap.addClass('la-blur');\n        $body.addClass('side-menu-active');\n      },\n      onClose: function(el) {\n        $('li', el).css({\n          opacity: 0\n        });\n        $contWrap.removeClass('la-blur');\n        $body.removeClass('side-menu-active');\n      }\n    });\n    // end of document ready\n  });\n})(jQuery);\n// end of jQuery name space\n"]}