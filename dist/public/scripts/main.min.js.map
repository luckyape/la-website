{"version":3,"sources":["main.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error"],"mappings":";;;;;;;;;;;;;;;;;;CAuBA,WACA,YAKA,IAAAA,GAAAC,QAAA,cAAAC,OAAAC,SAAAC,UAEA,UAAAF,OAAAC,SAAAC,UAEAF,OAAAC,SAAAC,SAAAC,MACA,0DAIA,kBAAAC,aACA,WAAAJ,OAAAC,SAAAI,UAAAP,IACAM,UAAAE,cAAAC,SAAA,qBACAC,KAAA,SAAAC,GAEAA,EAAAC,cAAA,WAKA,GAAAN,UAAAE,cAAAK,WAAA,CAGA,GAAAC,GAAAH,EAAAI,UAEAD,GAAAE,cAAA,WACA,OAAAF,EAAAG,OACA,IAAA,YAKA,KAEA,KAAA,YACA,KAAA,IAAAC,OAAA,yDAvBAZ,SAgCA,SAAAa,GACAC,QAAAC,MAAA,4CAAAF","file":"main.min.js","sourcesContent":["/* global probPhone */\n/* eslint-env browser */\n/* exported loadContactInfo */\n\n/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n\n(function main() {\n\t'use strict';\n\t// Check to make sure service workers are supported in the current browser,\n\t// and that the current page is accessed from a secure origin. Using a\n\t// service worker from an insecure origin will trigger JS console errors. See\n\t// http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n\tvar isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n\t);\n\n\tif ('serviceWorker' in navigator &&\n\t\t(window.location.protocol === 'https:' || isLocalhost)) {\n\t\tnavigator.serviceWorker.register('service-worker.js')\n\t\t\t.then(function(registration) {\n\t\t\t\t// updatefound is fired if service-worker.js changes.\n\t\t\t\tregistration.onupdatefound = function() {\n\t\t\t\t\t// updatefound is also fired the very first time the SW is installed,\n\t\t\t\t\t// and there's no need to prompt for a reload at that point.\n\t\t\t\t\t// So check here to see if the page is already controlled,\n\t\t\t\t\t// i.e. whether there's an existing service worker.\n\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t// The updatefound event implies that registration.installing is set:\n\t\t\t\t\t\t// https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n\t\t\t\t\t\tvar installingWorker = registration.installing;\n\n\t\t\t\t\t\tinstallingWorker.onstatechange = function() {\n\t\t\t\t\t\t\tswitch (installingWorker.state) {\n\t\t\t\t\t\t\t\tcase 'installed':\n\t\t\t\t\t\t\t\t\t// At this point, the old content will have been purged and the\n\t\t\t\t\t\t\t\t\t// fresh content will have been added to the cache.\n\t\t\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t\t\t// available; please refresh.\" message in the page's interface.\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'redundant':\n\t\t\t\t\t\t\t\t\tthrow new Error('The installing ' +\n\t\t\t\t\t\t\t\t\t\t'service worker became redundant.');\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t// Ignore\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}).catch(function(e) {\n\t\t\t\tconsole.error('Error during service worker registration:', e);\n\t\t\t});\n\t}\n})();\n\n\n\n"]}